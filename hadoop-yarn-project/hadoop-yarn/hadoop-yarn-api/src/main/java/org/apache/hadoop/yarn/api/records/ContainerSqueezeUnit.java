package org.apache.hadoop.yarn.api.records;

/**
 * Created by steven on 1/20/15.
 */

import org.apache.hadoop.classification.InterfaceAudience.Public;
import org.apache.hadoop.classification.InterfaceStability.Stable;
import org.apache.hadoop.yarn.util.Records;

/**
 * describe the unit to add/reduce a container
 */
@Public
@Stable
public abstract class ContainerSqueezeUnit  {



    @Public
    @Stable
    public static ContainerSqueezeUnit newInstance ( ContainerId containerId, Resource origin, Resource target){
        ContainerSqueezeUnit containerSqueezeUnit = Records.newRecord(ContainerSqueezeUnit.class);
        containerSqueezeUnit.setContainerId(containerId);
        containerSqueezeUnit.setOrigin(origin);
        containerSqueezeUnit.setTarget(target);
        return containerSqueezeUnit;
    }

    @Public
    @Stable
    public static ContainerSqueezeUnit newInstance ( ContainerId containerId, Resource diff, int priority){
        ContainerSqueezeUnit containerSqueezeUnit = Records.newRecord(ContainerSqueezeUnit.class);
        containerSqueezeUnit.setContainerId(containerId);
        containerSqueezeUnit.setDiff(diff);
        containerSqueezeUnit.setPriority(priority);
        return containerSqueezeUnit;
    }

    @Override
    public int hashCode() {
        // Generated by IntelliJ IDEA 13.1.
        int result = (int) (getContainerId().getContainerId() ^ (getContainerId().getContainerId() >>> 32));
        result = 31 * result + getDiff().hashCode();
        result = 31 * result + (int)getPriority();
        return result;
    }



    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        ContainerSqueezeUnit other = (ContainerSqueezeUnit) obj;

        // used by contain function. care about
        if (!this.getContainerId().equals(other.getContainerId()))
            return false;

        return true;
    }

    @Public
    @Stable
    public abstract void setContainerId(ContainerId containerId);

    @Public
    @Stable
    public abstract void setDiff(Resource diff);

    @Public
    @Stable
    public abstract Resource getDiff();

    @Public
    @Stable
    public abstract void setOrigin(Resource origin);

    @Public
    @Stable
    public abstract void setTarget(Resource target);

    @Public
    @Stable
    public abstract ContainerId getContainerId();

    @Public
    @Stable
    public abstract Resource getOrigin();

    @Public
    @Stable
    public abstract Resource getTarget();

    @Public
    @Stable
    public abstract long getPriority();

    @Public
    @Stable
    public abstract void setPriority(int priority);

}
